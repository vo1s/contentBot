from aiogram import Router, types, F, Bot
from aiogram.fsm.context import FSMContext
from aiogram.types import CallbackQuery, InlineKeyboardMarkup

from api.crypto_bot_api import crypto_bot
from config import config
from db import get_user_by_id
from keyboards.admin_keyboard import confirm_withdraw_keyboard_admin, get_money
from keyboards.payment_keyboard import confirm_withdraw_keyboard, admin
from states import Withdraw

router = Router()


@router.callback_query(F.data.startswith('withdraw_main'))
async def withdraw_main(call: CallbackQuery, state: FSMContext, bot: Bot):
    content = """"""
    user = await get_user_by_id(call.message.chat.id)
    balance = user['balance']
    if balance >= 400:
        content = f"""
<i>–í—ã–≤–æ–¥ –æ—Å—É—â–µ—Å—Ç–≤–ª—è–µ—Ç—Å—è –æ—Ç <b>200 —Ä—É–±–ª–µ–π</b> (2 üíé = 1 RUB) —á–µ—Ä–µ–∑ CryptoBot –≤ USDT</i>

–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –≤<b> RUB</b>, –∫–æ—Ç–æ—Ä—É—é —Ö–æ—Ç–µ–ª–∏ –±—ã –≤—ã–≤–µ—Å—Ç–∏:
–î–æ—Å—Ç—É–ø–Ω–æ –¥–ª—è –≤—ã–≤–æ–¥–∞: <i><b>{balance / 2}</b></i>
        """
        await state.set_state(Withdraw.amount)
        await call.message.answer(content)
    else:
        content = f"""
<i>–í—ã–≤–æ–¥ –æ—Å—É—â–µ—Å—Ç–≤–ª—è–µ—Ç—Å—è –æ—Ç <b>200 —Ä—É–±–ª–µ–π</b> (2 üíé = 1 RUB) —á–µ—Ä–µ–∑ CryptoBot –≤ USDT</i>

–ù–∞ –≤–∞—à–µ–º —Å—á–µ—Ç–µ –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –¥–ª—è –≤—ã–≤–æ–¥–∞!
–ë–∞–ª–∞–Ω—Å - {balance / 2} RUB
                """
        await call.message.answer(content)
        await call.answer()


@router.message(Withdraw.amount, F.text)
async def withdraw_amount(message: types.Message, state: FSMContext, bot: Bot):
    amount = int(message.text)
    if amount < 200:
        await message.answer("<b>–°—É–º–º–∞ –¥–æ–ª–∂–Ω–æ –ø—Ä–µ–≤—ã—à–∞—Ç—å 200 —Ä—É–±–ª–µ–π!</b>")
    else:
        content = f"""
    –í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –≤—ã–≤–µ—Å—Ç–∏ {amount} RUB?
        """

        await message.answer(content, reply_markup=confirm_withdraw_keyboard(amount))
        await state.clear()


@router.message(Withdraw.amount, ~F.text)
async def withdraw_amount_wrong(message: types.Message):
    await message.answer("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –¥–æ—Å—Ç—É–ø–Ω—É—é –¥–ª—è –≤—ã–≤–æ–¥–∞ —Å—É–º–º—É!")


@router.callback_query(F.data.startswith('confirm_withdraw'))
async def confirm_withdraw(call: CallbackQuery, bot: Bot):
    content = """
–°–ø–∞—Å–∏–±–æ! –í–∞—à –∑–∞–ø—Ä–æ—Å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –Ω–∞ –º–æ–¥–µ—Ä–∞—Ü–∏—é, –æ–∂–∏–¥–∞–π—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –±–æ—Ç–µ!
    """
    await bot.edit_message_text(
        chat_id=call.message.chat.id,
        message_id=call.message.message_id,
        text=content,
    )
    #await call.message.answer("–°–ø–∞—Å–∏–±–æ! –í–∞—à –∑–∞–ø—Ä–æ—Å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –Ω–∞ –º–æ–¥–µ—Ä–∞—Ü–∏—é, –æ–∂–∏–¥–∞–π—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –±–æ—Ç–µ!")
    amount = call.data.split(':')[1]
    moderation_chat_id = config.moderation_chat_id.get_secret_value()
    content = f"""
–ó–∞—è–≤–∫–∞ –Ω–∞ –≤—ã–≤–æ–¥
id: {call.message.chat.id}
–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: {amount} RUB

–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å?

    """
    await bot.send_message(chat_id=moderation_chat_id, text=content, reply_markup=confirm_withdraw_keyboard_admin(
        int(amount),
        call.message.chat.id)
                           )
    await call.answer()


@router.callback_query(F.data.startswith('admin_confirm_withdraw'))
async def confirm_withdraw(call: CallbackQuery, bot: Bot):
    amount = call.data.split(':')[1]
    user_id = call.data.split(':')[2]
    exchange_rates = await crypto_bot.get_exchange_rates()
    amount_usdt = 0
    for rate in exchange_rates:
        if rate.source == 'USDT' and rate.target == 'RUB':
            amount_usdt = float(amount) / float(rate.rate)
            break
    check = await crypto_bot.create_check(asset='USDT', amount=round(amount_usdt, 2), pin_to_user_id=int(user_id))

    await bot.delete_message(
        chat_id=call.message.chat.id,
        message_id=call.message.message_id,
    )

    await bot.send_message(chat_id=user_id, text="–ü–æ–ª—É—á–∏—Ç–µ –≤–∞—à–∏ —Å—Ä–µ–¥—Å—Ç–≤–∞!", reply_markup=get_money(check.bot_check_url))


@router.callback_query(F.data.startswith('admin_decline_withdraw'))
async def confirm_withdraw(call: CallbackQuery, bot: Bot):
    amount = call.data.split(':')[1]
    user_id = call.data.split(':')[2]
    content = """
–í–∞—à –∑–∞–ø—Ä–æ—Å –Ω–∞ –≤—ã–≤–æ–¥ <b>–æ—Ç–∫–ª–æ–Ω–µ–Ω</b> üò•

–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –∏–ª–∏ –Ω–∞–ø–∏—à–∏—Ç–µ –Ω–∞–º –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É!
    """

    await bot.delete_message(
        chat_id=call.message.chat.id,
        message_id=call.message.message_id,
    )

    await bot.send_message(chat_id=user_id, text=content, reply_markup=admin())
